@use '../../styling/breakpoints' as bp;

.toggle_container {
  display: flex;
  width: fit-content;
  margin-left: auto;
  justify-content: end;
  align-items: center;
  padding-bottom: 0.75rem;
  padding-right: 0.5rem;

  .theme_icon {
    fill: var(--background-medium);
  }

  &:has(.light) {
    .theme_icon {
      fill: var(--background-dark);
    }
  }
}

.toggle {
  position: relative;
  display: block;
  margin: 0 0.5rem 0 0.5rem;
  width: var(--T_buttonWidth);
  height: var(--T_buttonHeight);
  border-radius: var(--T_buttonHeight);
  background-color: #2b2b2b;
  cursor: pointer;
  background-clip: padding-box;
  box-shadow: 0 0 0.25rem 0.1rem rgb(66, 66, 66),
    inset 0 0.5rem 4rem rgba(0, 0, 0, 0.1),
    inset 0 0.5rem 0.5rem rgba(0, 0, 0, 0.1),
    inset 0 -0.25rem 0.25rem rgba(0, 0, 0, 0.1);

  &.light {
    background: var(--background-light);
  }

  &_button {
    position: absolute;
    z-index: 10;
    top: 0;
    left: 0;
    width: var(--T_buttonHeight);
    height: var(--T_buttonHeight);
    background: linear-gradient(to bottom, #444, #222);
    border: none;
    border-radius: 50%;
    transform: scale(0.9);
    pointer-events: none;
    box-shadow: 0 0.5rem 2.5rem rgba(0, 0, 0, 0.5),
      inset 0 0.125rem 0.125rem rgba(255, 255, 255, 0.2),
      inset 0 -0.125rem 0.125rem rgba(255, 255, 255, 0.2);
    transition: left 0.25s ease-in-out;
  }

  &.light {
    & > .toggle_button {
      left: calc(var(--T_buttonWidth) - var(--T_buttonHeight));

      pointer-events: none;
    }
  }
}
